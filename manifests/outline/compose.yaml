version: "3.2"
services:

  outline:
    image: outlinewiki/outline:0.73.1
    env_file: ./.env
    volumes:
      - storage-data:/var/lib/outline/data
    environment:
      SECRET_KEY: "${SECRET_KEY}"
      UTILS_SECRET: "${UTILS_SECRET}"
      OIDC_CLIENT_SECRET: "${OIDC_CLIENT_SECRET}"
      DATABASE_URL: "postgres://user:${POSTGRES_PASSWORD}@postgres:5432/outline"
      VIRTUAL_HOST: wiki.biohse.ru
      LETSENCRYPT_HOST: wiki.biohse.ru
      VIRTUAL_PORT: 3000
    depends_on:
      - postgres
      - redis

  redis:
    image: redis
    env_file: ./.env
    volumes:
      - ./redis.conf:/redis.conf
    command: ["redis-server", "/redis.conf"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 3

  postgres:
    image: postgres
    env_file: ./.env
    volumes:
      - database-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 30s
      timeout: 20s
      retries: 3
    environment:
      POSTGRES_USER: 'user'
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: 'outline'

  # grist:
  #   image: gristlabs/grist
  #   environment:
  #     GRIST_FORWARD_AUTH_HEADER: X-Forwarded-User
  #     GRIST_FORWARD_AUTH_LOGOUT_PATH: _oauth/logout
  #     GRIST_SINGLE_ORG: fbb  # alternatively, GRIST_ORG_IN_PATH: "true" for multi-team operation
  #     GRIST_DEFAULT_EMAIL: ${EMAIL}
  #     APP_HOME_URL: https://grist.biohse.ru
  #     VIRTUAL_HOST: grist.biohse.ru
  #     LETSENCRYPT_HOST: grist.biohse.ru
  #     VIRTUAL_PORT: 8484
  #   volumes:
  #     - grist-data:/persist

volumes:
  storage-data:
  database-data:
  # grist-data:
